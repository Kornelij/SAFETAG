name: Build and Deploy (staging)

on:
  workflow_dispatch:
  push:
    branches:
      - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging

    env:
      SITE_NAME: "Safetag"

    steps:
      # Cancel previous workflows to avoid overlapping deploys as content
      # editing might add several commits in short intervals.
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt install transifex-client

      - name: Set up secrets
        run: |
          touch .env
          echo TRANSIFEX_USER=${{ secrets.TRANSIFEX_USER }} >> .env
          echo TRANSIFEX_PASSWORD=${{ secrets.TRANSIFEX_PASSWORD }} >> .env
          cp .env .env.production
          cp .env .env.development
          cat .env

      # https://github.com/aws/aws-cli/issues/1249
      - name: Fix mimetypes detection for yaml files
        run: |
          echo 'application/x-yaml yaml yml' | sudo tee -a /etc/mime.types

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install and lint
        run: |
          yarn install
          yarn lint

      - name: Update translations and build
        run: |
          yarn extract
          tx config mapping-bulk -p safetag-overview --source-language en --type GITHUBMARKDOWN -f '.md' --source-file-dir content/ --expression 'locales/<lang>/{filepath}/{filename}{extension}' --ignore-dir posts --execute
          tx push -s
          yarn transifex
          yarn build

      - name: Deploy ðŸš€
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          path: public/
          remote_path: ${{ secrets.SSH_DIR }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_port: 22
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
