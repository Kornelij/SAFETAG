{"version":3,"sources":["webpack:///./src/styles/type/lists.js","webpack:///./src/components/layouts/method-layout.js"],"names":["Dl","styled","dl","horizontal","css","headingAlt","divide","themeVal","boldDesc","SquareUl","ul","MethodHeadline","InpageHeadline","media","mediumUp","MethodIcon","img","MethodIntro","article","MethodMeta","aside","ActivityList","section","CardList","ActivityCard","Card","CardHeading","MethodLayout","data","location","useTranslation","useSuspense","t","i18n","frontmatter","method","frontmattermd","fields","activities","edges","activityNodes","forEach","activity","node","title","slug","approaches","excerpt","short_summary","summary","references","referenceNodes","reference","html","approachNodes","approach","icon","replace","prevPath","state","prevPage","allFootnotes","loadAllFootnotes","language","processSections","sections","footnotes","columnLayout","direction","to","startsWith","i18nKey","size","variation","src","method_icon","withDeco","dangerouslySetInnerHTML","__html","purpose","authors","map","authr","key","href","guiding_questions","operational_security","border","preparation","outputs","id","index","as","Link","length","fn","query"],"mappings":"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","file":"component---src-components-layouts-method-layout-js-71bc478308e0f1536fa0.js","sourcesContent":["import styled, { css } from \"styled-components\"\n\nimport { divide } from \"../utils/math\"\nimport { themeVal } from \"../utils/general\"\nimport { headingAlt } from \"./heading\"\n\nconst Dl = styled.dl`\n  margin: 0;\n  font-feature-settings: \"pnum\" 0; /* Use proportional numbers */\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 1rem;\n    `}\n  dt {\n    ${headingAlt()}\n    margin: 0 0 ${divide(themeVal(\"layout.space\"), 4)} 0;\n  }\n\n  dd {\n    margin: 0 0 ${themeVal(\"layout.space\")} 0;\n    ${({ boldDesc }) =>\n      boldDesc &&\n      css`\n        font-weight: bold;\n      `}\n  }\n  dd + dd {\n    margin-top: -1rem;\n  }\n`\n\nexport default Dl\n\nexport const SquareUl = styled.ul`\n  &,\n  > ul,\n  > ul > ul {\n    padding-left: 1rem;\n  }\n  li {\n    list-style: none;\n    text-indent: -1.8rem;\n    margin-left: ${themeVal(\"layout.space\")};\n    margin-bottom: 0.25rem;\n    &:before {\n      content: \"\\\\25A0\";\n      font-size: 1.5rem;\n      vertical-align: baseline;\n      list-style-position: inherit;\n      margin-right: ${themeVal(\"layout.space\")};\n    }\n  }\n  li>p {\n    &:before {\n      content: '';\n    }\n    &:first-child {\n      display: inline;\n      text-indent: -1.8rem;\n    }\n  }\n  pre {\n    text-indent: 0;\n  }\n  table {\n    margin: 2rem 0;\n    font-size: 0.875rem;\n    text-align: left;\n    thead tr {\n      background-color: ${themeVal(\"color.primary\")};\n      color: ${themeVal(\"color.surface\")};\n    }\n\n    tbody tr:nth-child(odd) {\n      background-color: ${themeVal(\"color.mist\")};\n    }\n\n    th, td {\n      padding: 0.25rem 0.5rem;\n      border-right: 2px solid white;\n    }\n  }\n`\n\nexport const TagList = styled.dl``\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport { Link, Trans, useTranslation } from 'gatsby-plugin-react-i18next';\nimport styled from \"styled-components\"\n\nimport GlobalLayout from \"./global-layout\"\nimport SEO from \"../seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageTitle,\n} from \"../../styles/inpage\"\n\nimport MoreLink from \"../../styles/button/more-link\"\nimport Dl, { SquareUl } from \"../../styles/type/lists\"\nimport media from \"../../styles/utils/media-queries\"\nimport Card, { CardHeading, CardList } from \"../../styles/card\"\n\nimport { loadAllFootnotes, processSections } from \"../../helpers/footnotes.js\"\n\nconst MethodHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst MethodIcon = styled.img`\n  position: relative;\n  max-width: 2.5rem;\n  margin-left: 1rem;\n  margin-top: 1rem;\n  bottom: -0.25rem;\n  vertical-align: bottom;\n`\n\nconst MethodIntro = styled.article`\n  display: flex;\n  flex-flow: column nowrap;\n  p {\n    max-width: 60ch;\n    &:first-of-type {\n      &::first-line {\n        text-transform: uppercase;\n        font-weight: bold;\n      }\n    }\n  }\n`\nconst MethodMeta = styled.aside``\n\nconst ActivityList = styled.section`\n  grid-column: span 2;\n\n  ${CardList} {\n    margin-top: 2rem;\n  }\n`\nconst ActivityCard = styled(Card)`\n  ${media.mediumUp`\n    min-height: 6rem;\n  `}\n  ${CardHeading} {\n    margin: 0;\n  }\n`\n\nfunction MethodLayout({ data, location }) {\n  const { t, i18n } = useTranslation('site', { useSuspense: false })\n  const frontmatter = data.method.frontmatter\n  const frontmattermd = data.method.fields.frontmattermd\n\n  // creates an object with activity names as keys and activity slugs as values\n  const activities = data.activities.edges\n  const activityNodes = {}\n  activities.forEach(\n    activity => {\n      activityNodes[activity.node.frontmatter.title] = {\n        slug: activity.node.fields.slug,\n        approaches: activity.node.frontmatter.approaches,\n        excerpt: activity.node.frontmatter.short_summary ?\n          activity.node.frontmatter.short_summary\n          : activity.node.fields.frontmattermd.summary?.excerpt,\n      }\n    }\n  )\n\n  // creates an object with reference names as keys and reference slugs as values\n  let references = data.references.edges\n  const referenceNodes = {}\n  references.forEach(\n    reference =>\n      (referenceNodes[reference.node.frontmatter.title] = {\n        title: reference.node.frontmatter.title,\n        html: reference.node.html,\n      })\n  )\n\n  // the same for approaches\n  let approaches = data.approaches.edges\n  const approachNodes = {}\n  approaches.forEach(\n    approach =>\n      (approachNodes[approach.node.frontmatter.title] = {\n        title: approach.node.frontmatter.title,\n        icon: `/img/${approach.node.fields.slug.replace('/approaches/', '')}_icon.png`\n      })\n  )\n\n  // Get previous page path, if available\n  let prevPath = location.state && location.state.prevPath || \"\"\n  let prevPage = location.state && location.state.prevPage || \"\"\n\n  // load and integrate footnotes\n  const allFootnotes = loadAllFootnotes(data.references.edges, i18n.language)\n  let { sections, footnotes } = processSections(frontmattermd, allFootnotes)\n\n  return (\n    <GlobalLayout>\n      <SEO title={`Method: ` + frontmatter.title} />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <MethodHeadline>\n              <MoreLink\n                direction=\"back\"\n                to={\n                  prevPath.startsWith(\"/guide-builder\")\n                    ? prevPage\n                    : \"/#allMethods\"\n                }\n              >\n                <Trans i18nKey=\"method-back\">Back to</Trans> {prevPath ? t(\"guide builder\") : t(\"all methods\")}\n              </MoreLink>\n              <InpageTitle size=\"jumbo\" variation=\"primary\">\n                {frontmatter.title}\n                <MethodIcon src={frontmatter.method_icon} />\n              </InpageTitle>\n            </MethodHeadline>\n            <MethodIntro>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-summary\">Summary</Trans>\n              </InpageTitle>\n              <div\n                dangerouslySetInnerHTML={{ __html: sections.summary.html }}\n              ></div>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-purpose\">Purpose</Trans>\n              </InpageTitle>\n              <div\n                dangerouslySetInnerHTML={{ __html: sections.purpose.html }}\n              ></div>\n            </MethodIntro>\n            <MethodMeta>\n              <Dl boldDesc>\n                <Trans i18nKey=\"method-title-author\">Author</Trans>\n                {frontmatter.authors.map(authr => (\n                  <dd key={authr}>{authr}</dd>\n                ))}\n\n                {frontmatter.activities ? <dt><Trans i18nKey=\"method-title-act\">Included activities</Trans></dt> : \"\"}\n                {(frontmatter.activities || []).map((activity) => (\n                  <dd key={activity}>\n                    <a href=\"#activities\">\n                      {activity}\n                    </a>\n                  </dd>\n                ))}\n              </Dl>\n            </MethodMeta>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-questions\">Guiding Questions</Trans>\n              </InpageTitle>\n              <SquareUl\n                dangerouslySetInnerHTML={{\n                  __html: sections.guiding_questions.html,\n                }}\n              ></SquareUl>\n            </section>\n            <section></section>\n          </InpageInnerColumns>\n          <InpageInnerColumns columnLayout=\"1:1\">\n            {sections.operational_security && (\n              <Card border=\"base\">\n                <CardHeading><Trans i18nKey=\"method-title-opsec\">Operational Security</Trans></CardHeading>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: sections.operational_security.html,\n                  }}\n                ></div>\n              </Card>\n            )}\n            {sections.preparation && (\n              <Card border=\"base\">\n                <CardHeading><Trans i18nKey=\"method-title-prep\">Preparation</Trans></CardHeading>\n                <SquareUl\n                  dangerouslySetInnerHTML={{\n                    __html: sections.preparation.html,\n                  }}\n                ></SquareUl>\n              </Card>\n            )}\n          </InpageInnerColumns>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              {sections.outputs && (\n                <>\n                  <InpageTitle size=\"large\" withDeco>\n                    <Trans i18nKey=\"method-title-outputs\">Outputs</Trans>\n                  </InpageTitle>\n                  <SquareUl\n                    dangerouslySetInnerHTML={{\n                      __html: sections.outputs.html,\n                    }}\n                  ></SquareUl>\n                </>\n              )}\n            </section>\n          </InpageInnerColumns>\n        </InpageBody>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section id=\"activities\">\n              <ActivityList>\n                <InpageTitle size=\"large\" withDeco>\n                  <Trans i18nKey=\"method-title-activities\">Activities</Trans>\n                </InpageTitle>\n                <CardList>\n                  {(frontmatter.activities || []).map((activity, index) => (\n                    <li key={index}>\n                      <ActivityCard\n                        as={Link}\n                        to={activityNodes[activity] ? `${activityNodes[activity].slug}/`: ''}\n                        border=\"primary\"\n                        variation=\"secondary\"\n                      >\n                        <CardHeading variation=\"primary\">\n                        {activityNodes[activity] ? activityNodes[activity].approaches.map((approach, index) => (\n                          <img key={`approach-${index}`} src={approachNodes[approach].icon} />\n                        )) : ''}\n                        {activity}_\n                        </CardHeading>\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: activityNodes[activity] ? activityNodes[activity].excerpt : '',\n                          }}\n                        ></div>\n                      </ActivityCard>\n                    </li>\n                  ))}\n                </CardList>\n              </ActivityList>\n            </section>\n          </InpageInnerColumns>\n\n          {footnotes.length ? (\n            <InpageInnerColumns columnLayout=\"3:1\">\n              <article id=\"footnotes\">\n                <InpageTitle size=\"large\" withDeco>\n                  <Trans i18nKey=\"activity-footnotes\">Footnotes</Trans>\n                </InpageTitle>\n                <SquareUl>\n                  {footnotes.map(fn => (\n                    <li key={fn.key} id={fn.key}>\n                      <strong>{fn.index}</strong> <span\n                        dangerouslySetInnerHTML={{\n                          __html: fn.html,\n                        }}\n                        ></span>\n                    </li>\n                  ))}\n                </SquareUl>\n              </article>\n            </InpageInnerColumns>\n          ) : \"\"}\n\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-references\">References and resources for</Trans> {frontmatter.title}\n              </InpageTitle>\n              <SquareUl>\n                {(frontmatter.references || []).map((reference, index) => (\n                  <div key={\"ref-\" + index}>\n                    <p>{referenceNodes[reference].title}:</p>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: referenceNodes[reference].html,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </SquareUl>\n            </section>\n          </InpageInnerColumns>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nMethodLayout.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default MethodLayout\n\nexport const query = graphql`\n  query($slug: String!, $language: String!) {\n    method: markdownRemark(fields: { slug: { eq: $slug }, langKey: {eq: $language} }) {\n      html\n      frontmatter {\n        title\n        authors\n        activities\n        info_provided\n        info_required\n        references\n        method_icon\n        summary\n        purpose\n        guiding_questions\n        preparation\n        outputs\n        operational_security\n      }\n      fields {\n        frontmattermd {\n          summary { html, rawMarkdownBody }\n          purpose { html, rawMarkdownBody }\n          guiding_questions { html, rawMarkdownBody }\n          preparation { html, rawMarkdownBody }\n          outputs { html, rawMarkdownBody }\n          operational_security { html, rawMarkdownBody }\n        }\n      }\n    }\n    activities: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/activities//\"}, fields: {langKey: {eq: $language}}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            frontmattermd {\n              summary { excerpt }\n            }\n          }\n          frontmatter {\n            title\n            summary\n            approaches\n            short_summary\n          }\n        }\n      }\n    }\n    approaches: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/approaches//\"}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n    references: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/references//\"}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            title\n          }\n          rawMarkdownBody\n          html\n        }\n      }\n    }\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}