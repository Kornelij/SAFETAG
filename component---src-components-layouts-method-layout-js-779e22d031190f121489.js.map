{"version":3,"file":"component---src-components-layouts-method-layout-js-779e22d031190f121489.js","mappings":"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","sources":["webpack://safetag-website/./src/components/layouts/method-layout.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport { Link, Trans, useTranslation } from 'gatsby-plugin-react-i18next';\nimport styled from \"styled-components\"\nimport { Remark } from 'react-remark';\n\nimport GlobalLayout from \"./global-layout\"\nimport SEO from \"../seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageTitle,\n} from \"../../styles/inpage\"\n\nimport MoreLink from \"../../styles/button/more-link\"\nimport Dl, { SquareUl } from \"../../styles/type/lists\"\nimport media from \"../../styles/utils/media-queries\"\nimport Card, { CardHeading, CardList } from \"../../styles/card\"\n\nimport { loadAllFootnotes, processSections } from \"../../helpers/footnotes.js\"\n\nconst MethodHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst MethodIcon = styled.img`\n  position: relative;\n  max-width: 2.5rem;\n  margin-left: 1rem;\n  margin-top: 1rem;\n  bottom: -0.25rem;\n  vertical-align: bottom;\n`\n\nconst MethodIntro = styled.article`\n  display: flex;\n  flex-flow: column nowrap;\n  p {\n    max-width: 60ch;\n    &:first-of-type {\n      &::first-line {\n        text-transform: uppercase;\n        font-weight: bold;\n      }\n    }\n  }\n`\nconst MethodMeta = styled.aside``\n\nconst ActivityList = styled.section`\n  grid-column: span 2;\n\n  ${CardList} {\n    margin-top: 2rem;\n  }\n`\nconst ActivityCard = styled(Card)`\n  ${media.mediumUp`\n    min-height: 6rem;\n  `}\n  ${CardHeading} {\n    margin: 0;\n  }\n`\n\nfunction MethodLayout({ data, location }) {\n  const { t, i18n } = useTranslation('site', { useSuspense: false })\n  const frontmatter = data.method.frontmatter\n\n  // creates an object with activity names as keys and activity slugs as values\n  const activities = data.activities.edges\n  const activityNodes = {}\n  activities.forEach(\n    activity => {\n      activityNodes[activity.node.frontmatter.title] = {\n        slug: activity.node.fields.slug,\n        approaches: activity.node.frontmatter.approaches,\n        excerpt: activity.node.frontmatter.short_summary ?\n          activity.node.frontmatter.short_summary\n          : activity.node.frontmatter.summary.slice(0,200) + \"...\",\n      }\n    }\n  )\n\n  // creates an object with reference names as keys and reference slugs as values\n  let references = data.references.edges\n  const referenceNodes = {}\n  references.forEach(\n    reference =>\n      (referenceNodes[reference.node.frontmatter.title] = {\n        title: reference.node.frontmatter.title,\n        html: reference.node.html,\n      })\n  )\n\n  // the same for approaches\n  let approaches = data.approaches.edges\n  const approachNodes = {}\n  approaches.forEach(\n    approach =>\n      (approachNodes[approach.node.frontmatter.title] = {\n        title: approach.node.frontmatter.title,\n        icon: `/img/${approach.node.fields.slug.replace('/approaches/', '')}_icon.png`\n      })\n  )\n\n  // Get previous page path, if available\n  let prevPath = location.state && location.state.prevPath || \"\"\n  let prevPage = location.state && location.state.prevPage || \"\"\n\n  // load and integrate footnotes\n  const allFootnotes = loadAllFootnotes(data.references.edges, i18n.language)\n  let frontmatterCopy = Object.assign({}, frontmatter)\n  let { sections, footnotes } = processSections(frontmatterCopy, allFootnotes)\n\n  return (\n    <GlobalLayout>\n      <SEO title={`Method: ` + frontmatter.title} />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <MethodHeadline>\n              <MoreLink\n                direction=\"back\"\n                to={\n                  prevPath.startsWith(\"/guide-builder\")\n                    ? prevPage\n                    : \"/#allMethods\"\n                }\n              >\n                <Trans i18nKey=\"method-back\">Back to</Trans> {prevPath ? t(\"guide builder\") : t(\"all methods\")}\n              </MoreLink>\n              <InpageTitle size=\"jumbo\" variation=\"primary\">\n                {frontmatter.title}\n                <MethodIcon src={frontmatter.method_icon} />\n              </InpageTitle>\n            </MethodHeadline>\n            <MethodIntro>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-summary\">Summary</Trans>\n              </InpageTitle>\n              <div><Remark>{sections.summary}</Remark></div>\n\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-purpose\">Purpose</Trans>\n              </InpageTitle>\n              <div><Remark>{sections.purpose}</Remark></div>\n            </MethodIntro>\n            <MethodMeta>\n              <Dl boldDesc>\n                <Trans i18nKey=\"method-title-author\">Author</Trans>\n                {(frontmatter.authors || []).map(authr => (\n                  <dd key={authr}>{authr}</dd>\n                ))}\n\n                {frontmatter.activities ? <dt><Trans i18nKey=\"method-title-act\">Included activities</Trans></dt> : \"\"}\n                {(frontmatter.activities || []).map((activity) => (\n                  <dd key={activity}>\n                    <a href=\"#activities\">\n                      {activity}\n                    </a>\n                  </dd>\n                ))}\n              </Dl>\n            </MethodMeta>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-questions\">Guiding Questions</Trans>\n              </InpageTitle>\n              <SquareUl>\n                <Remark>{sections.guiding_questions}</Remark>\n              </SquareUl>\n            </section>\n            <section></section>\n          </InpageInnerColumns>\n          <InpageInnerColumns columnLayout=\"1:1\">\n            {sections.operational_security && (\n              <Card border=\"base\">\n                <CardHeading><Trans i18nKey=\"method-title-opsec\">Operational Security</Trans></CardHeading>\n                <div><Remark>{sections.operational_security}</Remark></div>\n              </Card>\n            )}\n            {sections.preparation && (\n              <Card border=\"base\">\n                <CardHeading><Trans i18nKey=\"method-title-prep\">Preparation</Trans></CardHeading>\n                <SquareUl>\n                  <Remark>{sections.preparation}</Remark>\n                </SquareUl>\n              </Card>\n            )}\n          </InpageInnerColumns>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              {sections.outputs && (\n                <>\n                  <InpageTitle size=\"large\" withDeco>\n                    <Trans i18nKey=\"method-title-outputs\">Outputs</Trans>\n                  </InpageTitle>\n                  <SquareUl>\n                    <Remark>{sections.outputs}</Remark>\n                  </SquareUl>\n                </>\n              )}\n            </section>\n          </InpageInnerColumns>\n        </InpageBody>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section id=\"activities\">\n              <ActivityList>\n                <InpageTitle size=\"large\" withDeco>\n                  <Trans i18nKey=\"method-title-activities\">Activities</Trans>\n                </InpageTitle>\n                <CardList>\n                  {(frontmatter.activities || []).map((activity, index) => (\n                    activityNodes[activity] ?\n                    <li key={index}>\n                      <ActivityCard\n                        as={Link}\n                        to={activityNodes[activity] ? `${activityNodes[activity].slug}/`: ''}\n                        border=\"primary\"\n                        variation=\"secondary\"\n                      >\n                        <CardHeading variation=\"primary\">\n                        {activityNodes[activity] ? activityNodes[activity].approaches.map((approach, index) => (\n                          <img key={`approach-${index}`} src={approachNodes[approach] ? approachNodes.icon : \"\"} />\n                        )) : ''}\n                        {activity}_\n                        </CardHeading>\n                        <div>\n                          <Remark>{activityNodes[activity].excerpt}</Remark>\n                        </div>\n                      </ActivityCard>\n                    </li>\n                    : <li>{activity}</li>\n                  ))}\n                </CardList>\n              </ActivityList>\n            </section>\n          </InpageInnerColumns>\n\n          {footnotes.length ? (\n            <InpageInnerColumns columnLayout=\"3:1\">\n              <article id=\"footnotes\">\n                <InpageTitle size=\"large\" withDeco>\n                  <Trans i18nKey=\"activity-footnotes\">Footnotes</Trans>\n                </InpageTitle>\n                <SquareUl>\n                  {footnotes.map(fn => (\n                    <li key={fn.key} id={fn.key}>\n                      <strong>{fn.index}</strong> <span\n                        dangerouslySetInnerHTML={{\n                          __html: fn.html,\n                        }}\n                      ></span>\n                    </li>\n                  ))}\n                </SquareUl>\n              </article>\n            </InpageInnerColumns>\n          ) : \"\"}\n\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              <InpageTitle size=\"large\" withDeco>\n                <Trans i18nKey=\"method-title-references\">References and resources for</Trans> {frontmatter.title}\n              </InpageTitle>\n              <SquareUl>\n                {(frontmatter.references || []).map((reference, index) => (\n                  referenceNodes[reference] ? (\n                  <div key={\"ref-\" + index}>\n                    <p>{referenceNodes[reference].title}:</p>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: referenceNodes[reference].html,\n                      }}\n                    ></div>\n                  </div>\n                ) : ''\n                ))}\n              </SquareUl>\n            </section>\n          </InpageInnerColumns>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nMethodLayout.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default MethodLayout\n\nexport const query = graphql`\n  query($slug: String!, $language: String!) {\n    method: markdownRemark(fields: { slug: { eq: $slug }, langKey: {eq: $language} }) {\n      html\n      frontmatter {\n        title\n        authors\n        activities\n        info_provided\n        info_required\n        references\n        method_icon\n        summary\n        purpose\n        guiding_questions\n        preparation\n        outputs\n        operational_security\n      }\n    }\n    activities: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/activities//\"}, fields: {langKey: {eq: $language}}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            title\n            summary\n            approaches\n            short_summary\n          }\n        }\n      }\n    }\n    approaches: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/approaches//\"}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n    references: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/references//\"}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            title\n          }\n          rawMarkdownBody\n          html\n        }\n      }\n    }\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n"],"names":["MethodHeadline","styled","InpageHeadline","media","MethodIcon","MethodIntro","MethodMeta","ActivityList","CardList","ActivityCard","Card","CardHeading","data","location","useTranslation","useSuspense","t","i18n","frontmatter","method","activities","edges","activityNodes","forEach","activity","node","title","slug","fields","approaches","excerpt","short_summary","summary","slice","references","referenceNodes","reference","html","approachNodes","approach","icon","replace","prevPath","state","prevPage","allFootnotes","loadAllFootnotes","language","frontmatterCopy","Object","assign","processSections","sections","footnotes","columnLayout","direction","to","startsWith","Trans","i18nKey","size","variation","src","method_icon","withDeco","purpose","boldDesc","authors","map","authr","key","href","guiding_questions","operational_security","border","preparation","outputs","id","index","as","Link","length","fn","dangerouslySetInnerHTML","__html"],"sourceRoot":""}