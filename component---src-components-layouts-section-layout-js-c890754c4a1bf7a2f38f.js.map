{"version":3,"sources":["webpack:///./src/components/layouts/section-layout.js","webpack:///./src/styles/button/more-link.js","webpack:///./src/styles/card.js","webpack:///./src/styles/inpage.js"],"names":["SectionHeadline","styled","InpageHeadline","media","mediumUp","SectionLayout","data","location","t","useTranslation","useSuspense","frontmatter","section","prevPath","state","prevPage","title","columnLayout","direction","to","startsWith","i18nKey","size","variation","dangerouslySetInnerHTML","__html","html","pseudoMapping","forward","back","paddingMapping","arrowDirection","MoreLink","Link","themeVal","css","defaultProps","getCardBorder","border","Card","article","glsp","_lighten","withHover","CardHeader","div","CardHeading","Heading","CardList","ul","listReset","smallUp","largeUp","Inpage","InpageInnerColumns","Constrainer","InpageHeader","header","isHidden","visuallyHidden","InpageHeaderInner","InpageTitle","props","InpageBody","p","headingAlt","InpageBodyInner"],"mappings":"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","file":"component---src-components-layouts-section-layout-js-c890754c4a1bf7a2f38f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport { Trans, useTranslation } from 'gatsby-plugin-react-i18next';\nimport styled from \"styled-components\"\n\nimport GlobalLayout from \"./global-layout\"\nimport SEO from \"../seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageTitle,\n} from \"../../styles/inpage\"\n\nimport MoreLink from \"../../styles/button/more-link\"\nimport media from \"../../styles/utils/media-queries\"\n\nconst SectionHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nfunction SectionLayout({ data, location }) {\n  const { t } = useTranslation('site', { useSuspense: false })\n  const frontmatter = data.section.frontmatter\n\n  // Get previous page path, if available\n  let prevPath = location.state && location.state.prevPath || \"\"\n  let prevPage = location.state && location.state.prevPage || \"\"\n\n  return (\n    <GlobalLayout>\n      <SEO title={`Section: ` + frontmatter.title} />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <SectionHeadline>\n              <MoreLink\n                direction=\"back\"\n                to={\n                  prevPath.startsWith(\"/guide-builder\")\n                    ? prevPage\n                    : \"/#allSections\"\n                }\n              >\n                <Trans i18nKey=\"method-back\">Back to</Trans> {prevPath ? t(\"guide builder\") : t(\"all methods\")}\n              </MoreLink>\n              <InpageTitle size=\"jumbo\" variation=\"primary\">\n                {frontmatter.title ? frontmatter.title : \"\"}\n              </InpageTitle>\n            </SectionHeadline>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section\n                dangerouslySetInnerHTML={{\n                  __html: data.section.html,\n                }}>\n            </section>\n            <section></section>\n          </InpageInnerColumns>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nSectionLayout.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default SectionLayout\n\nexport const query = graphql`\n  query($slug: String!, $language: String!) {\n    section: markdownRemark(fields: { slug: { eq: $slug }, langKey: {eq: $language} }) {\n      html\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport styled, { css } from \"styled-components\"\nimport { themeVal } from \"../utils/general\"\n\nconst pseudoMapping = {\n  forward: \"after\",\n  back: \"before\",\n}\n\nconst paddingMapping = {\n  forward: \"left\",\n  back: \"right\",\n}\n\nconst arrowDirection = {\n  forward: \"\\\\27F6\",\n  back: \"\\\\27F5\",\n}\n\nconst MoreLink = styled(Link)`\n  color: inherit;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-feature-settings: \"pnum\" 0; /* Use proportional numbers */\n  font-family: ${themeVal(\"type.heading.family\")};\n  font-weight: ${themeVal(\"type.heading.light\")};\n  text-transform: uppercase;\n  letter-spacing: 0.025rem;\n\n  /* Arrow before or after attribute */\n  ${({ direction }) => \n    direction && css`\n    &:${pseudoMapping[direction]} {\n      padding-${paddingMapping[direction]}: 0.5rem;\n      content: '${arrowDirection[direction]}';\n      transition: all 0.16s cubic-bezier(.55,.085,.68,.53);\n    }\n    &:hover {\n      &:${pseudoMapping[direction]} {\n        padding-${paddingMapping[direction]}: 1rem;\n      }\n    }\n    &:hover,\n    &:active {\n      &:${pseudoMapping[direction]} {\n        transform: none;\n      }\n    }\n  `}\n\n  /* Remove global link :after styles */\n  &:after {\n    opacity: 1;\n    transform: none;\n    left: inherit;\n    bottom: inherit;\n    height: inherit;\n    background: inherit;\n  }\n`\n\nMoreLink.defaultProps = {\n  direction: \"forward\",\n}\n\nexport default MoreLink\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n  img {\n    max-height: 1.5rem;\n    margin-right: 0.75rem;\n  }\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"sourceRoot":""}