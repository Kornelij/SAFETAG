{"version":3,"file":"component---src-pages-activities-js-7b44e80c99d89b65d021.js","mappings":"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","sources":["webpack://safetag-website/./src/pages/activities.js","webpack://safetag-website/./src/styles/card.js","webpack://safetag-website/./src/styles/inpage.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport { Link, Trans, useTranslation } from 'gatsby-plugin-react-i18next';\n\nimport GlobalLayout from \"../components/layouts/global-layout\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageBodyInner,\n  InpageTitle,\n} from \"../styles/inpage\"\nimport Card, { CardHeading, CardList } from \"../styles/card\"\nimport media from \"../styles/utils/media-queries\"\n\nconst MethodHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst ActivityCard = styled(Card)`\n  > :last-child:not(:first-child) {\n    padding-top: 0;\n  }\n  ${CardHeading} {\n    &:after {\n      content: \"_\";\n    }\n  }\n`\n\nfunction Activities({ data }) {\n  useTranslation('site', { useSuspense: false });\n  let approaches = data.approaches.edges\n  const approachNodes = {}\n  approaches.forEach(\n    approach =>\n      (approachNodes[approach.node.frontmatter.title] = {\n        title: approach.node.frontmatter.title,\n        icon: `/img/${approach.node.fields.slug.replace('/approaches/', '')}_icon.png`\n      })\n  )\n\n  return (\n    <GlobalLayout>\n      <SEO title=\"Activities\" />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"3:1\">\n            <MethodHeadline>\n              <InpageTitle size=\"jumbo\" variation=\"primary\" withDeco>\n                <Trans i18nKey=\"activities-title\">Activities</Trans>\n              </InpageTitle>\n            </MethodHeadline>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageBodyInner>\n            <CardList>\n              {data.activities.edges.map(\n                ({ node }, index) =>\n                  node.fields != null &&\n                  node.frontmatter.summary && (\n                    <li key={index}>\n                      <ActivityCard\n                        variation=\"secondary\"\n                        border=\"primary\"\n                        as={Link}\n                        to={node.fields.slug}\n                        withHover\n                      >\n                        <CardHeading variation=\"primary\">\n                          {node.frontmatter.approaches.map((approach, index) => {\n                            if (approachNodes[approach]) {\n                              <img key={`approach-${index}`} src={approachNodes[approach].icon} />\n                            }\n                          })}\n                          { node.frontmatter.title }\n                        </CardHeading>\n                        <p>\n                          {\n                            node.frontmatter.short_summary ? node.frontmatter.short_summary\n                              : node.frontmatter.summary\n                          }\n                        </p>\n                      </ActivityCard>\n                    </li>\n                  )\n              )}\n            </CardList>\n          </InpageBodyInner>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nActivities.propTypes = {\n  data: PropTypes.array,\n}\n\nexport default Activities\n\nexport const query = graphql`\n  query($language: String!) {\n    activities: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/activities//\"}, fields: {langKey: {eq: $language}}},\n      sort: { fields: [frontmatter___position, frontmatter___title],  },\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            position\n            approaches\n            short_summary\n          }\n        }\n      }\n    }\n    approaches: allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/approaches//\"}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n  img {\n    max-height: 1.5rem;\n    margin-right: 0.75rem;\n  }\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"names":["MethodHeadline","styled","InpageHeadline","media","ActivityCard","Card","CardHeading","data","useTranslation","useSuspense","approaches","edges","approachNodes","forEach","approach","node","frontmatter","title","icon","fields","slug","replace","columnLayout","size","variation","withDeco","Trans","i18nKey","activities","map","index","summary","key","border","as","Link","to","withHover","short_summary","getCardBorder","themeVal","glsp","_lighten","css","CardHeader","Heading","CardList","listReset","Inpage","InpageInnerColumns","Constrainer","InpageHeader","isHidden","visuallyHidden","InpageHeaderInner","InpageTitle","props","InpageBody","headingAlt","InpageBodyInner"],"sourceRoot":""}