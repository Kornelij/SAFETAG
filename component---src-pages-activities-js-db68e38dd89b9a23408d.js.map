{"version":3,"file":"component---src-pages-activities-js-db68e38dd89b9a23408d.js","mappings":"wOAqBA,MAAMA,GAAiBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAeC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAtBJ,CAAsB,QACzCK,EAAAA,EAAMC,SAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uCAKZC,GAAeT,EAAAA,EAAAA,SAAOU,EAAAA,IAAKR,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAZJ,CAAY,8EAI7BW,EAAAA,IA6EJ,UAtEA,SAAmBC,GAAY,IAAX,KAAEC,GAAMD,GAC1BE,EAAAA,EAAAA,gBAAe,OAAQ,CAAEC,aAAa,IACtC,IAAIC,EAAaH,EAAKG,WAAWC,MACjC,MAAMC,EAAgB,CAAC,EASvB,OARAF,EAAWG,SACTC,GACGF,EAAcE,EAASC,KAAKC,YAAYC,OAAS,CAChDA,MAAOH,EAASC,KAAKC,YAAYC,MACjCC,KAAK,QAASJ,EAASC,KAAKI,OAAOC,KAAKC,QAAQ,eAAgB,IAAG,eAKvEC,EAAAA,cAACC,EAAAA,EAAY,KACXD,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,eACXK,EAAAA,cAACG,EAAAA,GAAM,KACLH,EAAAA,cAACI,EAAAA,GAAY,KACXJ,EAAAA,cAACK,EAAAA,GAAkB,CAACC,aAAa,OAC/BN,EAAAA,cAAC7B,EAAc,KACb6B,EAAAA,cAACO,EAAAA,GAAW,CAACC,KAAK,QAAQC,UAAU,UAAUC,UAAQ,GACpDV,EAAAA,cAACW,EAAAA,MAAK,CAACC,QAAQ,oBAAmB,kBAK1CZ,EAAAA,cAACa,EAAAA,GAAU,KACTb,EAAAA,cAACc,EAAAA,GAAe,KACdd,EAAAA,cAACe,EAAAA,GAAQ,KACN9B,EAAK+B,WAAW3B,MAAM4B,KACrB,CAAAC,EAAWC,KAAK,IAAf,KAAE1B,GAAMyB,EAAA,OACQ,MAAfzB,EAAKI,QACLJ,EAAKC,YAAY0B,SACfpB,EAAAA,cAAA,MAAIqB,IAAKF,GACPnB,EAAAA,cAACnB,EAAY,CACX4B,UAAU,YACVa,OAAO,UACPC,GAAIC,EAAAA,KACJC,GAAIhC,EAAKI,OAAOC,KAChB4B,WAAS,GAET1B,EAAAA,cAACjB,EAAAA,GAAW,CAAC0B,UAAU,WACpBhB,EAAKC,YAAYN,WAAW6B,KAAI,CAACzB,EAAU2B,KACtC7B,EAAcE,IACoBF,EAAcE,GAAUI,IAC9D,IAEAH,EAAKC,YAAYC,OAErBK,EAAAA,cAAA,SAEIP,EAAKC,YAAYiC,cAAgBlC,EAAKC,YAAYiC,cAC9ClC,EAAKC,YAAY0B,UAK9B,QAQnB,C,6LC/FA,MAUMQ,EAAgBV,IAAiB,IAAhB,OAAEI,GAAQJ,EAC/B,MAAe,SAAXI,GAA0BO,EAAAA,EAAAA,IAAS,cACxB,YAAXP,GAA6BO,EAAAA,EAAAA,IAAS,iBAC3B,cAAXP,GAA+BO,EAAAA,EAAAA,IAAS,mBAC7B,UAAXP,GAA2BO,EAAAA,EAAAA,IAAS,iBACjC,SAAS,EAGZ/C,EAAOV,EAAAA,QAAO0D,QAAOxD,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAdJ,CAAc,wNACd2D,EAAAA,EAAAA,IAAK,IAAMA,EAAAA,EAAAA,IAAK,MAGlBF,EAAAA,EAAAA,IAAS,eAtBM7C,IAAoB,IAAnB,UAAEyB,GAAWzB,EACtC,MAAkB,SAAdyB,GAA6BuB,EAAAA,EAAAA,IAAS,KAAMH,EAAAA,EAAAA,IAAS,eACvC,YAAdpB,GAAgCuB,EAAAA,EAAAA,IAAS,IAAKH,EAAAA,EAAAA,IAAS,kBACzC,cAAdpB,GACKuB,EAAAA,EAAAA,IAAS,MAAOH,EAAAA,EAAAA,IAAS,oBAChB,UAAdpB,GAA8BuB,EAAAA,EAAAA,KAASH,EAAAA,EAAAA,IAAS,GAAK,kBACvC,YAAdpB,EAAgC,cAC7B,OAAO,IAkBZwB,IAAA,IAAC,OAAEX,GAAQW,EAAA,OACXX,IACAY,EAAAA,EAAAA,KAAG,0BACmBN,EACrB,IAEcG,EAAAA,EAAAA,IAAK,IAGXF,EAAAA,EAAAA,IAAS,eAITA,EAAAA,EAAAA,IAAS,eAOlBM,IAAA,IAAC,UAAET,GAAWS,EAAA,OACdT,IACAQ,EAAAA,EAAAA,KAAG,mRAUqBN,EAWvB,IAGL,OAEO,MAAMQ,EAAahE,EAAAA,QAAOiE,IAAG/D,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAVJ,CAAU,4FAYvBW,GAAcX,EAAAA,EAAAA,SAAOkE,EAAAA,IAAQhE,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAfJ,CAAe,2GACvB2D,EAAAA,EAAAA,OAaNhB,GAJa3C,EAAAA,QAAOiE,IAAG/D,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAVJ,CAAU,sBAIZA,EAAAA,QAAOmE,GAAEjE,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAATJ,CAAS,8HAC7BoE,EAAAA,EAAAA,OAGUT,EAAAA,EAAAA,IAAK,GACfjD,EAOEL,EAAAA,EAAMgE,QAAO9D,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iDAKbH,EAAAA,EAAMiE,QAAOC,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,kD,sVChHnB,MAOauB,EAAS/B,EAAAA,QAAO0D,QAAOxD,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAdJ,CAAc,2DAMvBiC,GAAqBjC,EAAAA,EAAAA,SAAOwE,EAAAA,GAAYtE,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAnBJ,CAAmB,kKAGpC2D,EAAAA,EAAAA,IAAK,IACFA,EAAAA,EAAAA,IAAK,GACrBtD,EAAAA,EAAMC,SAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAlBMI,IAAuB,IAAtB,aAAEsB,GAActB,EACvC,MAAqB,QAAjBsB,EAA+B,UACd,QAAjBA,EAA+B,UACd,QAAjBA,EAA+B,UAC5B,SAAS,IAgBPyB,EAAAA,EAAAA,IAAK,IACGA,EAAAA,EAAAA,IAAK,IAENjD,EAAAA,GAMZL,EAAAA,EAAMC,SAAQiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,wCAMPwB,EAAehC,EAAAA,QAAOyE,OAAMvE,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAbJ,CAAa,6BAErC8C,IAAA,IAAC,SAAE4B,GAAU5B,EAAA,OACb4B,IACAZ,EAAAA,EAAAA,KAAG,SACCa,EAAAA,EAAAA,MACH,IACehB,EAAAA,EAAAA,IAAK,IAGZiB,GAAoB5E,EAAAA,EAAAA,SAAOwE,EAAAA,GAAYtE,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAnBJ,CAAmB,yFAIvC2D,EAAAA,EAAAA,IAAK,IAAMA,EAAAA,EAAAA,OAGX1D,EAAiBD,EAAAA,QAAOiE,IAAG/D,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,qHAKnB2D,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,OAmBRxB,GAfgBnC,EAAAA,QAAOiE,IAAG/D,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAVJ,CAAU,6FAIrB2D,EAAAA,EAAAA,IAAK,IAIW3D,EAAAA,QAAOiE,IAAG/D,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAVJ,CAAU,sEAIzB2D,EAAAA,EAAAA,IAAK,OAGG3D,EAAAA,EAAAA,UAAO6D,IAAA,OAAMgB,GAAOhB,EAAA,OAAKjC,EAAAA,cAACsC,EAAAA,GAAYW,EAAS,IAAC3E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAhDJ,CAAgD,yCACxD2D,EAAAA,EAAAA,IAAK,MAiDXlB,GA7CgBzC,EAAAA,QAAO8E,EAAC5E,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAARJ,CAAQ,8CACjC+E,EAAAA,EAAAA,OA4CsB/E,EAAAA,QAAOgF,QAAO9E,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAdJ,CAAc,2GAvClB+D,IAAoB,IAAnB,UAAE1B,GAAW0B,EAClC,MAAkB,SAAd1B,GACKyB,EAAAA,EAAAA,KAAG,gIACYL,EAAAA,EAAAA,IAAS,eAElBA,EAAAA,EAAAA,IAAS,kBACFA,EAAAA,EAAAA,IAAS,kBAEHA,EAAAA,EAAAA,IAAS,kBAGpBA,EAAAA,EAAAA,IAAS,kBAKH,SAAdpB,GACAyB,EAAAA,EAAAA,KAAG,qJACYL,EAAAA,EAAAA,IAAS,kBAElBA,EAAAA,EAAAA,IAAS,kBACFA,EAAAA,EAAAA,IAAS,kBAEHA,EAAAA,EAAAA,IAAS,kBAGpBA,EAAAA,EAAAA,IAAS,kBAITA,EAAAA,EAAAA,IAAS,mBAInBK,EAAAA,EAAAA,KAAG,sCAQOH,EAAAA,EAAAA,IAAK,IACFA,EAAAA,EAAAA,IAAK,KASdjB,GAAkB1C,EAAAA,EAAAA,SAAOwE,EAAAA,GAAYtE,WAAA,CAAAC,YAAA,0BAAAC,YAAA,iBAAnBJ,CAAmB,yCACrC2D,EAAAA,EAAAA,IAAK,IAAMA,EAAAA,EAAAA,OAGTA,EAAAA,EAAAA,M","sources":["webpack://safetag-website/./src/pages/activities.js","webpack://safetag-website/./src/styles/card.js","webpack://safetag-website/./src/styles/inpage.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport { Link, Trans, useTranslation } from 'gatsby-plugin-react-i18next';\n\nimport GlobalLayout from \"../components/layouts/global-layout\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageBodyInner,\n  InpageTitle,\n} from \"../styles/inpage\"\nimport Card, { CardHeading, CardList } from \"../styles/card\"\nimport media from \"../styles/utils/media-queries\"\n\nconst MethodHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst ActivityCard = styled(Card)`\n  > :last-child:not(:first-child) {\n    padding-top: 0;\n  }\n  ${CardHeading} {\n    &:after {\n      content: \"_\";\n    }\n  }\n`\n\nfunction Activities({ data }) {\n  useTranslation('site', { useSuspense: false });\n  let approaches = data.approaches.edges\n  const approachNodes = {}\n  approaches.forEach(\n    approach =>\n      (approachNodes[approach.node.frontmatter.title] = {\n        title: approach.node.frontmatter.title,\n        icon: `/img/${approach.node.fields.slug.replace('/approaches/', '')}_icon.png`\n      })\n  )\n\n  return (\n    <GlobalLayout>\n      <SEO title=\"Activities\" />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"3:1\">\n            <MethodHeadline>\n              <InpageTitle size=\"jumbo\" variation=\"primary\" withDeco>\n                <Trans i18nKey=\"activities-title\">Activities</Trans>\n              </InpageTitle>\n            </MethodHeadline>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageBodyInner>\n            <CardList>\n              {data.activities.edges.map(\n                ({ node }, index) =>\n                  node.fields != null &&\n                  node.frontmatter.summary && (\n                    <li key={index}>\n                      <ActivityCard\n                        variation=\"secondary\"\n                        border=\"primary\"\n                        as={Link}\n                        to={node.fields.slug}\n                        withHover\n                      >\n                        <CardHeading variation=\"primary\">\n                          {node.frontmatter.approaches.map((approach, index) => {\n                            if (approachNodes[approach]) {\n                              <img key={`approach-${index}`} src={approachNodes[approach].icon} />\n                            }\n                          })}\n                          { node.frontmatter.title }\n                        </CardHeading>\n                        <p>\n                          {\n                            node.frontmatter.short_summary ? node.frontmatter.short_summary\n                              : node.frontmatter.summary\n                          }\n                        </p>\n                      </ActivityCard>\n                    </li>\n                  )\n              )}\n            </CardList>\n          </InpageBodyInner>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nActivities.propTypes = {\n  data: PropTypes.array,\n}\n\nexport default Activities\n\nexport const query = graphql`query ($language: String!) {\n  activities: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/activities//\"}, fields: {langKey: {eq: $language}}}\n    sort: [{frontmatter: {position: ASC}}, {frontmatter: {title: ASC}}]\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          summary\n          position\n          approaches\n          short_summary\n        }\n      }\n    }\n  }\n  approaches: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/approaches//\"}}\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n        html\n      }\n    }\n  }\n  locales: allLocale(filter: {language: {eq: $language}}) {\n    edges {\n      node {\n        ns\n        data\n        language\n      }\n    }\n  }\n}`\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n  img {\n    max-height: 1.5rem;\n    margin-right: 0.75rem;\n  }\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"names":["MethodHeadline","styled","InpageHeadline","withConfig","displayName","componentId","media","mediumUp","_templateObject","_taggedTemplateLiteralLoose","ActivityCard","Card","CardHeading","_ref","data","useTranslation","useSuspense","approaches","edges","approachNodes","forEach","approach","node","frontmatter","title","icon","fields","slug","replace","React","GlobalLayout","SEO","Inpage","InpageHeader","InpageInnerColumns","columnLayout","InpageTitle","size","variation","withDeco","Trans","i18nKey","InpageBody","InpageBodyInner","CardList","activities","map","_ref2","index","summary","key","border","as","Link","to","withHover","short_summary","getCardBorder","themeVal","article","glsp","_lighten","_ref3","css","_ref4","CardHeader","div","Heading","ul","listReset","smallUp","largeUp","_templateObject2","Constrainer","header","isHidden","visuallyHidden","InpageHeaderInner","props","p","headingAlt","section"],"sourceRoot":""}