{"version":3,"file":"component---src-pages-posts-js-e5cc9fbca34715ea4d5a.js","mappings":"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","sources":["webpack://safetag-website/./src/pages/posts.js","webpack://safetag-website/./src/styles/card.js","webpack://safetag-website/./src/styles/inpage.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\n\nimport GlobalLayout from \"../components/layouts/global-layout\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Inpage,\n  InpageBody,\n  InpageBodyInner,\n} from \"../styles/inpage\"\nimport Heading from \"../styles/type/heading\"\n\nfunction PostsPage({ data }) {\n\n  return (\n    <GlobalLayout>\n      <SEO title=\"Safetag\" />\n      <Inpage>\n\n        <InpageBody>\n          <InpageBodyInner>\n            <Heading id=\"recent-updates\" size=\"jumbo\" variation=\"primary\" withDeco>\n              All posts\n            </Heading>\n            <ul>\n              {data.allMarkdownRemark.edges.map(\n                ({ node }, index) => (\n                    <li key={index}>\n                      <Link to={node.fields.slug}>{node.frontmatter.title}</Link> &mdash; {node.frontmatter.date}\n                    </li>\n                  )\n              )}\n            </ul>\n          </InpageBodyInner>\n        </InpageBody>\n\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nPostsPage.propTypes = {\n  data: PropTypes.array,\n}\n\nexport default PostsPage\n\n/*\n      filter: {\n        relativeDirectory: { eq: \"methods\" }\n        internal: { mediaType: { eq: \"text/markdown\" } }\n      }\n*/\n\nexport const query = graphql`\n  query($language: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date],  order: DESC },\n      filter: {fileAbsolutePath: {regex: \"/posts/\"}}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM Do, YYYY\")\n          }\n        }\n      }\n    }\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n  img {\n    max-height: 1.5rem;\n    margin-right: 0.75rem;\n  }\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"names":["data","title","id","size","variation","withDeco","allMarkdownRemark","edges","map","index","node","key","Link","to","fields","slug","frontmatter","date","getCardBorder","border","themeVal","Card","styled","glsp","_lighten","css","withHover","CardHeader","CardHeading","Heading","CardList","listReset","media","Inpage","InpageInnerColumns","Constrainer","columnLayout","InpageHeader","isHidden","visuallyHidden","InpageHeaderInner","InpageHeadline","InpageTitle","props","InpageBody","headingAlt","InpageBodyInner"],"sourceRoot":""}