{"version":3,"sources":["webpack:///./src/components/search-site.js","webpack:///./src/pages/search.js","webpack:///./src/styles/card.js","webpack:///./src/styles/inpage.js"],"names":["searchBoxStyle","resultUlStyle","listStyleType","resultLiStyle","margin","resultTypeStyle","color","marginRight","Search","state","query","props","initialQuery","results","search","event","target","value","length","getSearchResults","setState","componentDidMount","this","console","log","searchInput","focus","render","ResultList","message","t","useTranslation","useSuspense","context","React","useContext","I18nextContext","map","page","i","includes","type","lang","language","push","key","slug","url","title","className","style","result","replace","c","toUpperCase","to","ref","node","classNames","cols","onChange","placeholder","inputEl","searchQuery","index","window","__FLEXSEARCH__","en","store","Object","keys","forEach","idx","values","Array","from","Set","filter","id","Component","SearchPage","location","size","variation","withDeco","getCardBorder","border","themeVal","Card","styled","article","glsp","_lighten","css","withHover","CardHeader","div","CardHeading","Heading","CardList","ul","listReset","media","smallUp","largeUp","Inpage","InpageInnerColumns","Constrainer","mediumUp","columnLayout","InpageHeader","header","isHidden","visuallyHidden","InpageHeaderInner","InpageHeadline","InpageTitle","InpageBody","p","headingAlt","section","InpageBodyInner"],"mappings":"gKAKMA,EAAiB,CACrB,OAAU,SAENC,EAAgB,CACpBC,cAAe,QAEXC,EAAgB,CACpBC,OAAQ,WAEJC,EAAkB,CACtBC,MAAO,OACPC,YAAa,OA+IAC,E,oJA1IbC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,aAAe,EAAKD,MAAMC,aAAe,GAC3DC,QAAS,I,EAsHXC,OAAS,SAAAC,GACP,IAAML,EAAQK,EAAMC,OAAOC,MAC3B,GAAI,EAAKR,MAAMC,MAAMQ,OAAS,EAAG,CAC/B,IAAML,EAAU,EAAKM,iBAAiBT,GACtC,EAAKU,SAAS,CAAEP,QAASA,EAASH,MAAOA,SAEzC,EAAKU,SAAS,CAAEP,QAAS,GAAIH,MAAOA,K,8CAzHxCW,kBAAA,WACE,GAAIC,KAAKX,MAAMC,aAAc,CAC3BW,QAAQC,IAAI,YAAcF,KAAKX,MAAMC,cACrC,IAAMC,EAAUS,KAAKH,iBAAiBG,KAAKX,MAAMC,cACjDU,KAAKF,SAAS,CAAEP,YAGlBS,KAAKG,YAAYC,S,EAGnBC,OAAA,WAAU,IAAD,OACDC,EAAa,WACjB,IAAIf,EAAU,GACVgB,EAAU,GACNC,EAAMC,yBAAe,OAAQ,CAAEC,aAAa,IAA5CF,EACFG,EAAUC,IAAMC,WAAWC,kBAyBjC,OAvBI,EAAK3B,MAAMI,QAAQK,OAAS,EAC9B,EAAKT,MAAMI,QAAQwB,KAAI,SAACC,EAAMC,GACxB,CAAC,WAAY,SAAU,YAAa,QAAQC,SAASF,EAAKG,OAASH,EAAKI,MAAQT,EAAQU,UAC1F9B,EAAQ+B,KAAK,CACXC,IAAKN,EACLO,KAAMR,EAAKS,IACXC,MAAOV,EAAKU,MAGZP,KAAMH,EAAKG,UAKjBZ,EADS,EAAKpB,MAAMC,MAAMQ,OAAS,EACzBY,EAAE,mBAAqB,EAAKrB,MAAMC,MAAQ,IAEtB,IAA9B,EAAKD,MAAMI,QAAQK,QACnB,EAAKT,MAAMC,MAAMQ,OAAS,EAEhBY,EAAE,wCAEF,GAERjB,EAAQK,OAAS,EAEnB,yBAAK+B,UAAU,qBACb,wBAAIC,MAAOjD,GACVY,EAAQwB,KAAI,SAACc,GAAD,OACT,wBAAID,MAAO/C,EAAe8C,UAAU,mBAAmBJ,IAAKM,EAAON,KACjE,0BAAMK,MAAO7C,GAAkB8C,EAAOV,KAAKW,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,kBACnE,kBAAC,OAAD,CAAMC,GAAIJ,EAAOL,KAAMG,UAAU,QAC9BE,EAAOH,aAOTnB,EACD,yBAAKoB,UAAU,qBACrB,yBAAKA,UAAU,oBAAqBpB,IAExB,IAGlB,OACE,yBAAK2B,IAAKlC,KAAKmC,KAAMR,UAAW,gBAAkB3B,KAAKX,MAAM+C,WAAa,YACtE,yBAAKT,UAAW,+CAAiD3B,KAAKX,MAAMgD,MAC1E,yBAAKV,UAAU,mBACX,2BAAOR,KAAK,OACZS,MAAOlD,EACP4D,SAAUtC,KAAKR,OACf+C,YAAY,SACZ5C,MAAOK,KAAKb,MAAMC,MAClB8C,IAAK,SAAAM,GAAO,OAAK,EAAKrC,YAAcqC,KAEpC,uBAAGb,UAAU,mBAEf,kBAACrB,EAAD,S,EAQZT,iBAAA,SAAiBT,GACXA,IAAUY,KAAKb,MAAMsD,cACvBxC,QAAQC,IAAI,4BACZF,KAAKF,SAAS,CAAE2C,YAAarD,IAC7Ba,QAAQC,IAAIF,KAAKb,OACjBc,QAAQC,IAAI,sBAAwBF,KAAKb,MAAMsD,cAEjD,IAAIC,EAAQC,OAAOC,eAAeC,GAAGH,MACjCI,EAAQH,OAAOC,eAAeC,GAAGC,MAGrC,GAAK1D,GAAUsD,EAGR,CAELzC,QAAQC,IAAI,iBAAmBd,GAC/B,IAAIG,EAAU,GAWd,OAVAwD,OAAOC,KAAKN,GAAOO,SAAQ,SAAAC,GAAQ,IAAD,GAChC,EAAA3D,GAAQ+B,KAAR,oBAAgBoB,EAAMQ,GAAKC,OAAO3D,OAAOJ,QAG3CG,EAAU6D,MAAMC,KAAK,IAAIC,IAAI/D,IAEjBuD,EACTS,QAAO,SAAApB,GAAI,OAAK5C,EAAQ2B,SAASiB,EAAKqB,IAAMrB,EAAO,QACnDpB,KAAI,SAAAoB,GAAI,OAAIA,EAAKA,QAbpB,OADAlC,QAAQC,IAAI,iBACL,I,GAtGQuD,a,gDCwBNC,UA7Bf,YAAmC,IAAbC,EAAY,EAAZA,SAChBrE,EAAe,GAInB,OAHIqE,EAASxE,OAASwE,EAASxE,MAAMsD,cACnCnD,EAAeqE,EAASxE,MAAMsD,aAG9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKf,MAAM,YACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS8B,GAAG,iBAAiBI,KAAK,QAAQC,UAAU,UAAUC,UAAQ,GAAtE,kBAIA,kBAAC,EAAD,CAAQxE,aAAcA,U,oOCb5ByE,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,MAAe,SAAXA,EAA0BC,YAAS,cACxB,YAAXD,EAA6BC,YAAS,iBAC3B,cAAXD,EAA+BC,YAAS,mBAC7B,UAAXD,EAA2BC,YAAS,iBACjC,WAGHC,EAAOC,IAAOC,QAAV,iEAAGD,CAAH,sNACGE,YAAK,GAAMA,YAAK,KAGlBJ,YAAS,eAtBM,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAC3B,MAAkB,SAAdA,EAA6BS,YAAS,IAAML,YAAS,eACvC,YAAdJ,EAAgCS,YAAS,GAAKL,YAAS,kBACzC,cAAdJ,EACKS,YAAS,KAAOL,YAAS,oBAChB,UAAdJ,EAA8BS,YAASL,YAAS,GAAK,kBACvC,YAAdJ,EAAgC,cAC7B,WAkBL,qBAAGG,QAEHO,YADM,0BAEgBR,KAGPM,YAAK,GAGXJ,YAAS,cAITA,YAAS,eAOlB,qBAAGO,WAEHD,YADS,mRAWeR,MAcbG,MAER,IAAMO,EAAaN,IAAOO,IAAV,uEAAGP,CAAH,4FAYVQ,EAAcR,YAAOS,KAAV,wEAAGT,CAAH,0GACLE,eAaNQ,GAJaV,IAAOO,IAAV,uEAAGP,CAAH,sBAICA,IAAOW,GAAV,qEAAGX,CAAH,6HACjBY,cAGUV,YAAK,GACfH,EAOEc,IAAMC,QAZS,mEAiBfD,IAAME,QAjBS,sE,2bCxFRC,EAAShB,IAAOC,QAAV,qEAAGD,CAAH,2DAMNiB,EAAqBjB,YAAOkB,KAAV,iFAAGlB,CAAH,iKAGdE,YAAK,GACFA,YAAK,GACrBW,IAAMM,SALqB,qGAbP,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,MAAqB,QAAjBA,EAA+B,UACd,QAAjBA,EAA+B,UACd,QAAjBA,EAA+B,UAC5B,YAgBElB,YAAK,GACGA,YAAK,IAENH,IAMZc,IAAMM,SAhBmB,0DAsBlBE,EAAerB,IAAOsB,OAAV,2EAAGtB,CAAH,6BAErB,qBAAGuB,UAEHnB,YADQ,QAEJoB,iBAEYtB,YAAK,IAGZuB,EAAoBzB,YAAOkB,KAAV,gFAAGlB,CAAH,wFAIjBE,YAAK,GAAMA,eAGXwB,EAAiB1B,IAAOO,IAAV,6EAAGP,CAAH,oHAKNE,cAGAA,eAmBRyB,GAfgB3B,IAAOO,IAAV,4EAAGP,CAAH,4FAIRE,YAAK,IAIWF,IAAOO,IAAV,iFAAGP,CAAH,qEAIZE,YAAK,MAGGF,aAAO,gBAAM9E,EAAN,2BAAkB,kBAAC,IAAYA,MAAzC,0EAAG8E,CAAH,wCACLE,YAAK,MAiDX0B,GA7CgB5B,IAAO6B,EAAV,4EAAG7B,CAAH,6CACtB8B,eA4CsB9B,IAAO+B,QAAV,yEAAG/B,CAAH,2GAvCD,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UACvB,MAAkB,SAAdA,EACKU,YAAP,+HACsBN,YAAS,cAElBA,YAAS,iBACFA,YAAS,iBAEHA,YAAS,iBAGpBA,YAAS,kBAKH,SAAdJ,EACAU,YAAP,oJACsBN,YAAS,iBAElBA,YAAS,iBACFA,YAAS,iBAEHA,YAAS,iBAGpBA,YAAS,iBAITA,YAAS,kBAInBM,YAAP,qCAQiBF,YAAK,GACFA,YAAK,KASd8B,EAAkBhC,YAAOkB,KAAV,+EAAGlB,CAAH,wCACfE,YAAK,GAAMA,cAGTA","file":"component---src-pages-search-js-9726c8afc5d4dc89ebf3.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, I18nextContext, useTranslation } from 'gatsby-plugin-react-i18next';\nimport PropTypes from \"prop-types\"\n\n\nconst searchBoxStyle = {\n  'margin': '2em 0',\n}\nconst resultUlStyle = {\n  listStyleType: 'none',\n}\nconst resultLiStyle = {\n  margin: '0.5em 0',\n}\nconst resultTypeStyle = {\n  color: '#aaa',\n  marginRight: '1em',\n}\n\n\nclass Search extends Component {\n  state = {\n    query: this.props.initialQuery ? this.props.initialQuery : '',\n    results: []\n  };\n\n  componentDidMount() {\n    if (this.props.initialQuery) {\n      console.log(\"Initial: \" + this.props.initialQuery)\n      const results = this.getSearchResults(this.props.initialQuery)\n      this.setState({ results })\n    }\n    // focus input box\n    this.searchInput.focus()\n  }\n\n  render() {\n    const ResultList = () => {\n      let results = []\n      let message = ''\n      const { t } = useTranslation('site', { useSuspense: false })\n      const context = React.useContext(I18nextContext);\n\n      if (this.state.results.length > 0) {\n        this.state.results.map((page, i) => {\n          if (['activity', 'method', 'blog post', 'tool'].includes(page.type) && page.lang == context.language) {\n            results.push({\n              key: i,\n              slug: page.url,\n              title: page.title,\n              // type: page.type,\n              // type: page.url ? page.url.replace('/', '').split('/')[0] : '',\n              type: page.type\n            })\n          }\n        })\n      } else if (this.state.query.length > 2) {\n        message = t('No results for ') + this.state.query + '.'\n      } else if (\n        this.state.results.length === 0 &&\n        this.state.query.length > 0\n      ) {\n        message = t('Please insert at least 3 characters.')\n      } else {\n        message = ''\n      }\n      if (results.length > 0) {\n        return (\n        <div className=\"m-search__results\">\n          <ul style={resultUlStyle}>\n          {results.map((result) => (\n              <li style={resultLiStyle} className=\"m-search__result\" key={result.key}>\n                <span style={resultTypeStyle}>{result.type.replace(/^\\w/, (c) => c.toUpperCase())}</span>\n                <Link to={result.slug} className=\"link\">\n                  {result.title}\n                </Link>\n              </li>)\n            )}\n          </ul>\n        </div>\n        )\n      } else if (message){\n        return (<div className=\"m-search__results\">\n          <div className=\"m-search__result\">{ message }</div>\n        </div>)\n      } else { return '' }\n    }\n\n    return (\n      <div ref={this.node} className={'row m-search ' + this.props.classNames + '__search'}>\n          <div className={\"m-search__wrapper col-sm-12 col-md-8 col-lg-\" + this.props.cols}>\n            <div className=\"m-search__input\">\n                <input type=\"text\"\n                style={searchBoxStyle}\n                onChange={this.search}\n                placeholder=\"Search\"\n                value={this.state.query}\n                ref={inputEl => (this.searchInput = inputEl)}\n                />\n                <i className=\"fas fa-search\"></i>\n            </div>\n              <ResultList />\n          </div>\n      </div>\n    )\n  }\n\n\n\n  getSearchResults(query) {\n    if (query && !this.state.searchQuery) {\n      console.log(\"Resetting searchQuery...\")\n      this.setState({ searchQuery: query })\n      console.log(this.state)\n      console.log(\"State query value: \" + this.state.searchQuery)\n    }\n    var index = window.__FLEXSEARCH__.en.index\n    var store = window.__FLEXSEARCH__.en.store\n    // var index = window.__FLEXSEARCH__[this.props.lang].index\n    // var store = window.__FLEXSEARCH__[this.props.lang].store\n    if (!query || !index) {\n      console.log(\"Not searching\")\n      return []\n    } else {\n      // query = query.replace(/ /g, '+')\n      console.log(\"Searching for \" + query)\n      var results = []\n      Object.keys(index).forEach(idx => {\n        results.push(...index[idx].values.search(query))\n      })\n\n      results = Array.from(new Set(results))\n\n      var nodes = store\n        .filter(node => (results.includes(node.id) ? node : null))\n        .map(node => node.node)\n\n      return nodes\n    }\n  }\n\n  search = event => {\n    const query = event.target.value\n    if (this.state.query.length > 2) {\n      const results = this.getSearchResults(query)\n      this.setState({ results: results, query: query })\n    } else {\n      this.setState({ results: [], query: query })\n    }\n  }\n}\n\n\nSearch.propTypes = {\n  classNames: PropTypes.string,\n  cols: PropTypes.number,\n  initialQuery: PropTypes.string\n}\n\nexport default Search\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport Search from \"../components/search-site\"\n\nimport GlobalLayout from \"../components/layouts/global-layout\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Inpage,\n  InpageBody,\n  InpageBodyInner,\n} from \"../styles/inpage\"\nimport Heading from \"../styles/type/heading\"\n\nfunction SearchPage({ location }) {\n  let initialQuery = '';\n  if (location.state && location.state.searchQuery) {\n    initialQuery = location.state.searchQuery\n  }\n  return (\n    <GlobalLayout>\n      <SEO title=\"Safetag\" />\n      <Inpage>\n        <InpageBody>\n          <InpageBodyInner>\n            <Heading id=\"recent-updates\" size=\"jumbo\" variation=\"primary\" withDeco>\n              Search SAFETAG\n            </Heading>\n\n            <Search initialQuery={initialQuery} />\n\n          </InpageBodyInner>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nSearchPage.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default SearchPage\n\nexport const query = graphql`\n  query($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n  img {\n    max-height: 1.5rem;\n    margin-right: 0.75rem;\n  }\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"sourceRoot":""}